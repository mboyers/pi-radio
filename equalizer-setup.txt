# I decided that the Bose Colorlink speaker didn't have enough treble, and since it doesn't support EQ, I decided to
# set it up on the pi.

# To install:
sudo apt-get install alsa-utils
sudo apt-get install libasound2-plugin-equal -y

# Multiple pieces are in play here:
#  The configuration for the equalizer and then sending the mpd output through the equalizer.
#  Allowing the mpd instance to see the above configuration as its under the "pi" user
# Configuring the equalizer so that mpd can read the equalizer settings

# First, lets just make sure we can configure the alsa equalizer apart from anything else.  We will
# test it in a standalone manner and make sure our configuration works before trying anything with mpd.

# The configuration is in ~/.asoundrc

# This was the original .asoundrc:
pcm.!default {
        type hw
        card 0
}

ctl.!default {
        type hw
        card 0
}

# I changed .asoundrc to this:
pcm.!default {
 type plug
 slave.pcm plugequal;
}

ctl.equal {
 type equal
}

pcm.plugequal {
 type equal
 slave.pcm "plughw:ALSA,0"
}

pcm.equal {
 type plug
 slave.pcm plugequal
}


# To run the equalizer for the current "pi" user:
alsamixer -D equal

# To play a file outside of mpd to test the equalizer and the asound in a standalone manner:
aplay up-to-my-neck-in-you.wav

# Again, any settings will be stored under the "pi" account and will not apply to mpd, as that runs under its own account.

# At this point, in the equalizer window, moving things up and down should affect the EQ of the file being played.
# Make sure neither of these are run with sudo

# At this point, we need to route the mpd output through the equalizer.  First we need to edit the "master" alsa config so that
# it knows about the location of the "pi" user's .asoundrc:

sudo nano /usr/share/alsa/alsa.conf

# Then look for the following section.  Add the line with /home/pi in it and save.

@hooks [
        {
                func load
                files [
                        {
                                @func concat
                                strings [
                                        { @func datadir }
                                        "/alsa.conf.d/"
                                ]
                        }
                        "/etc/asound.conf"
                        "~/.asoundrc"
                        "/home/pi/.asoundrc" # added !
                ]
                errors false
        }
]
...

# Now change the audio_output section in /etc/mpd.conf to the following.  This routes the mpd sound through the alsa equalizer:

audio_output {
  type    "alsa"
  name    "equal"
  device  "plug:plugequal"
}

# Then restart mpd
sudo systemctl restart mpd

# You can manually play/stop mpd to see if it's working.  You may see an error message in the output if it's not
mpc play
mpc stop

# At this point, you will need to run the alsa equalizer under the mpd account.  This means mpd will have its own settings
# for the equalizer, different from anything you did earlier then we were verifying individual steps.  We'll make a script:

vi runeq.sh

#!/bin/bash
su -s /bin/sh -c "alsamixer -D equal" mpd

chmod +x runeq.sh
sudo ./runeq.sh

# As changes are made, you should be able to hear them in real time as mpd is playing

# I believe the mpd-specific equalizer settings are stored here:

./var/lib/mpd/.alsaequal.bin